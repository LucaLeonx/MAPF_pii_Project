@startuml
skinparam linetype ortho
skinparam nodesep 100
skinparam ranksep 100

!startsub MAP
class Graph {
    '- edge_list : Edge[]
    - node_adjacency_list : dict[Node, Node[*]]
    + __init__(edge_list : Edge[])
    + get_nodes() : Node[]
    + has_node(node : Node)
    + get_adjacent_nodes(node : Node) : Node[]
    + get_edges() : Edge[]
    + has_edge : (start_node : Node, end_node : Node)
    + get_edge : (start_node : Node, end_node : Node)
    + __str__() : str
}

class Edge {
    '- start : Node
    '- end : Node
    - weight: int
    + __init__(start : Node, end : Node, weight : int)
    + get_start_node() : Node
    + get_end_node() : Node
    + get_weight() : int
    + __eq__(other : Object) : bool
    + __hash__() : int
    + __str__() : str
}

class Node {
    - index : int
    - x : int
    - y : int

    - cantor_pairing_function(numbers : (int, int)) : int {static}
    - cantor_inverse_pairing_function(n : int) : (int, int) {static}
    + __init__(index : int {optional}, coordinates : (int, int) {optional})
    + get_index() : int
    + get_coordinates() : (int, int)
    + __eq__(other : Object) : bool
    + __hash__() : int
    + __str__() : str
}
note right : "index and coordinates must be\n non-negative integers"

Graph --* "*" Node
Graph --* "*" Edge : - edge_list : Edge[]
Edge --o "2   " Node : - start, end

!endsub

@enduml