@startuml

abstract class Metric {
    - identifier : str
    - label : str

    + Metric(identifier : str, label : str)
    + identifier() : str
    + label() : str
    + evaluate(data: Any, results_store: Any)
}

class PlanResults {
    results : dict[str, Any]
    labels : dict[str, str]
    plan: Plan
    PlanResults(Plan, Metrics, results_dict)
    results_dict():
    results()
    PlanResults.evaluate()
}

class AgentResults {

}

class AggregatePlanResultsStore {
    results : dict[str, Any]
    plans : list[PlanResults]
    inner_results() : list[PlanResults]
    evaluate
}

class AverageMetric
class MetadataGetterMetric
class CountMetric
class SumMetric


class EuclideanNorm
class AgentMakeSpan
class AgentNumOfMoves
class AgentNumOfWaits
class AgentTotalDistance
class AgentMaxType
class VertexCollisions
class EdgeCollisions
class Success
class Solved
class Solver
class IterationNumber



@enduml